#N struct 1214-DS float x float y array 1214-table 1214-element;
#N struct 1214-element float x float y;
#N canvas 387 93 534 598 12;
#X obj 412 339 pointer;
#N canvas 636 221 509 380 template 0;
#X obj 245 304 plot \$0-table 900 2;
#X text 61 46 Data Structure named "\$0-DS" holding coordinates floats
"x/y" and an array named "\$0-table" using the element struct named
"\$0-f" defined in the other subpatch., f 53;
#X obj 53 131 struct \$0-DS float x float y array \$0-table \$0-element
;
#X text 72 178 The drawing instruction now does not specify a spacing
value between the floats in the array. This is because it would get
ignored because we also have a "x" variable in the element's struct.
Hence \, it takes 'x' from the data itself. The 'x' values are initialized
as "0" \, so all values in the array are grouped together at initialization.
, f 47;
#X restore 357 157 pd template;
#X msg 47 272 0 20 40 60 80 100 120 140 160 180 200 220 240 260 280
300;
#X text 255 473 <= sets size;
#X text 77 21 In this example we're able to set the values of both
'x' and 'y' elements in an array., f 52;
#X text 76 67 You can now click and drag each point in the array both
vertically and horizontaly., f 52;
#X text 52 247 Initialize/set the 'x' values for each element:;
#X text 66 312 You can later drag around also in the 'x' axis., f
19;
#X obj 303 369 append \$0-DS x y;
#X obj 210 503 array size -s \$0-DS \$0-table;
#X obj 47 402 array set -s \$0-DS \$0-table -f \$0-f x;
#X obj 60 129 initmess \; pd-\$0-display clear \, vis 1 \; \$0-pointer
traverse pd-\$0-display \, bang \; \$0-coords 10 105 \; \$0-size 16
;
#N canvas 1005 301 334 221 \$0-display 1;
#X scalar 1214-DS 10 105 \; 0 0 \; \;;
#X coords 0 221 1 220 0 0 0;
#X restore 357 184 pd \$0-display;
#X obj 412 309 r \$0-pointer;
#X obj 303 328 r \$0-coords;
#X obj 210 445 r \$0-size;
#N canvas 442 23 480 272 \$0-element 0;
#X obj 92 230 filledpolygon 0 0 1 -2 -2 2 -2 2 2 -2 2;
#X text 89 200 draw a black dot to represent the value:;
#X obj 167 152 struct \$0-element float x float y;
#X text 33 42 The element is defined as a struct of name "\$0-element"
containing now both a float named "x" and "y". Since these are the
special variable names for the horizontal and vertical coordinates
\, this means you can drag this element both vertically and horizonatly.
;
#X restore 357 131 pd \$0-element;
#X floatatom 210 473 5 0 0 0 - - -;
#X connect 0 0 8 2;
#X connect 2 0 10 0;
#X connect 8 0 9 1;
#X connect 8 0 10 2;
#X connect 13 0 0 0;
#X connect 14 0 8 0;
#X connect 15 0 17 0;
#X connect 17 0 9 0;
