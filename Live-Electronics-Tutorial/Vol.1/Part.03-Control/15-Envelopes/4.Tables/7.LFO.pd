#N canvas 310 71 1009 532 12;
#X declare -path else;
#X obj 684 131 hsl 128 15 0.1 0.9 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X floatatom 681 158 5 0 0 0 - - -;
#X text 706 129 pulse width;
#X obj 184 237 vsaw~ 2 0.5;
#X obj 227 312 graph~ 20000 2 0 1;
#X obj 184 272 rescale~;
#X obj 95 314 *~;
#X obj 95 247 osc~ 440;
#X obj 95 360 out~;
#X obj 211 151 hsl 128 15 0.1 0.9 0 0 empty empty empty -2 -8 0 10
-228856 -1 -1 0 1;
#X floatatom 208 178 5 0 0 0 - - -;
#X text 233 149 pulse width;
#X obj 208 208 f2s~ 10 0.5;
#X obj 618 344 *~;
#X obj 618 277 osc~ 440;
#X obj 741 221 hsl 128 15 50 500 1 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 664 229 pulse~ 2;
#X obj 618 390 out~;
#X obj 744 353 graph~ 20000 0 0 1;
#X obj 701 277 glide2~ 150;
#X obj 738 243 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 681 189 f2s~ 10 0.5;
#X text 521 74 Pulse signals are quite useful as envelopes. Here we
also use [glide2~] as a smoothener for generating attack and release
ramps.;
#X obj 783 36 declare -path else;
#X text 33 60 So yeah \, why not use actual oscillators as LFOs and
treat them as envelopes? Here are a few examples. First \, [vsaw~]
is used for an attack release envelope (below \, the [rescale~] object
rescales the output from o to 1)., f 61;
#X connect 0 0 1 0;
#X connect 1 0 21 0;
#X connect 3 0 5 0;
#X connect 5 0 4 0;
#X connect 5 0 6 1;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 9 0 10 0;
#X connect 10 0 12 0;
#X connect 12 0 3 1;
#X connect 13 0 17 0;
#X connect 14 0 13 0;
#X connect 15 0 20 0;
#X connect 16 0 19 0;
#X connect 19 0 13 1;
#X connect 19 0 18 0;
#X connect 20 0 19 1;
#X connect 21 0 16 1;
