#N canvas 388 78 937 491 12;
#X declare -path else;
#X floatatom 633 201 3 0 0 0 - - -;
#X obj 633 281 mtof;
#X obj 770 174 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 633 251 display;
#X obj 633 330 osc~;
#X obj 679 330 decay2~ 50 500;
#X obj 679 308 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 661 361 *~;
#X obj 211 252 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 81 229 until;
#X obj 81 203 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X obj 211 324 display;
#X text 101 199 generate series;
#X obj 661 402 out~;
#X obj 633 118 tempo 60 50 -on;
#X obj 633 148 rand.seq 5 4 1 3 2 1;
#X obj 81 253 rand.seq 12;
#X obj 278 33 declare -path else;
#X obj 211 297 group;
#X obj 633 225 sequencer 60 64 69 71 76;
#X obj 633 175 + 1;
#X text 662 201 <= element number;
#X text 475 27 By setting different weigths you can specify which value
has more chances to appear. In the example below \, [rand.seq] generates
values from 0 to 4 and the occurance is: 0 (4 times) \, 1 (once) \,
2 (3 times) \, 3 (2 times) and 4 (once)., f 61;
#X text 446 240 play random notes with different weigths ====>, f
23;
#X text 26 79 The [rand.seq] object is similar to [chance] \, but it
can be used to generate a random sequence of integers that do not repeat.
With the argument of "12" \, it generates a random sequence of 12 values
from 0 to 11 without repeating any element. This can be used \, for
instancce \, to generate a dodecaphonic series as in the example below.
, f 55;
#X text 230 250 done;
#X text 29 365 But the important thing is that this also generates
a weighted series \, where you can define how many times one of the
numbers can be repeated while generating the sequence. Once all numbers
have been output with their respective repetition \, a whole new random
sequence restarts. This is slightly different than [chance]., f 54
;
#X text 793 173 new sequence;
#X connect 0 0 19 0;
#X connect 1 0 4 0;
#X connect 1 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 7 0;
#X connect 5 0 7 1;
#X connect 6 0 5 0;
#X connect 7 0 13 0;
#X connect 8 0 9 1;
#X connect 8 0 18 0;
#X connect 9 0 16 0;
#X connect 10 0 9 0;
#X connect 14 0 15 0;
#X connect 15 0 20 0;
#X connect 15 1 2 0;
#X connect 16 0 18 0;
#X connect 16 1 8 0;
#X connect 18 0 11 0;
#X connect 19 0 3 0;
#X connect 20 0 0 0;
