#N struct 1030-pixel float color;
#N canvas 670 60 560 662 10;
#X obj 248 158 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 23 41 cnv 4 4 4 empty empty Pick/Convert 0 28 2 18 -233017 -1
0;
#X obj 131 41 cnv 4 4 4 empty empty colors 0 28 2 18 -233017 -1 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 3 4 cnv 15 301 42 empty empty colors 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 4 306 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 4 483 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 4 518 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 105 492 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 106 312 cnv 17 3 166 empty empty 0 5 9 0 16 -228856 -162280
0;
#X obj 4 634 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X text 198 312 bang;
#X text 154 232 click opens color picker =>, f 15;
#X msg 269 212 rgb 127 127 127;
#X msg 209 193 pick;
#X msg 263 189 hex #feabc4;
#X text 271 159 convert/output;
#X text 95 193 open color picker;
#N canvas 994 43 707 769 convert 0;
#X obj 380 191 else/pack2 rgb 0 0 0;
#X obj 419 26 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -258049
-262144 -1 0 0;
#X obj 458 26 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4033
-262144 -1 0 0;
#X obj 497 26 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4160
-262144 -1 0 0;
#X obj 419 168 int;
#X obj 458 168 int;
#X obj 497 168 int;
#X symbolatom 380 287 8 0 0 0 - - -;
#X obj 116 258 else/colors;
#X msg 136 167 to rgb \, hex #ab1f4c;
#X msg 116 141 to hex \, rgb 127 127 127;
#X msg 380 311 hex \$1;
#X msg 148 201 to ds \, bang;
#X text 75 70 You can define the output format with a flag \, and also
with the "to" message., f 40;
#X text 68 336 Be aware that when you lose resolution when you convert
to "ds" (Pd's Data Structures format)., f 38;
#X obj 116 287 else/display;
#X obj 380 219 else/display;
#X obj 380 365 else/display;
#X obj 57 608 else/pack2 cmyk 0 0 0 0;
#X obj 104 458 vsl 15 128 0 100 0 0 empty \$0-cyan empty 0 -9 0 10
-4096 -1 -1 0 1;
#X obj 128 458 vsl 15 128 0 100 0 0 empty \$0-yellow empty 0 -9 0 10
-262081 -1 -1 0 1;
#X obj 154 458 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 -258112
-1 -1 0 1;
#X obj 183 458 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 -1
-262144 -1 0 1;
#X obj 57 670 else/display;
#X obj 451 455 vsl 15 128 0 360 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 390 642 else/pack2 hsl 0 0 0;
#X obj 544 642 else/pack2 hsv 0 0 0;
#X floatatom 451 594 8 0 0 0 - - -;
#X obj 511 455 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X floatatom 511 594 8 0 0 0 - - -;
#X obj 581 455 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X floatatom 581 594 8 0 0 0 - - -;
#X obj 390 673 else/colors;
#X obj 390 702 else/display;
#X obj 544 673 else/colors;
#X obj 544 702 else/display;
#X text 483 420 HSL & HSV;
#X obj 245 462 vsl 15 128 0 100 0 0 empty empty empty 0 -9 0 10 -228856
-1 -1 0 1;
#X obj 245 669 else/display;
#X msg 245 608 gray \$1;
#X text 283 516 <= gray scale;
#X text 37 429 CMYK values (from \, 0 to 100);
#X msg 164 225 to iemgui \, bang;
#X obj 116 115 loadbang;
#X obj 380 260 else/colors;
#X text 469 249 converts to hexadecimal (default), f 11;
#X text 489 329 converts to RGB, f 8;
#X text 452 260 <=;
#X obj 380 335 else/colors -rgb;
#X obj 245 640 else/colors;
#X obj 57 641 else/colors -rgb;
#X connect 0 0 16 0;
#X connect 1 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 6 0;
#X connect 4 0 0 1;
#X connect 5 0 0 2;
#X connect 6 0 0 3;
#X connect 7 0 11 0;
#X connect 8 0 15 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 48 0;
#X connect 12 0 8 0;
#X connect 16 0 44 0;
#X connect 18 0 50 0;
#X connect 19 0 18 1;
#X connect 20 0 18 2;
#X connect 21 0 18 3;
#X connect 22 0 18 4;
#X connect 24 0 27 0;
#X connect 25 0 32 0;
#X connect 26 0 34 0;
#X connect 27 0 25 1;
#X connect 27 0 26 1;
#X connect 28 0 29 0;
#X connect 29 0 25 2;
#X connect 29 0 26 2;
#X connect 30 0 31 0;
#X connect 31 0 25 3;
#X connect 31 0 26 3;
#X connect 32 0 33 0;
#X connect 34 0 35 0;
#X connect 37 0 39 0;
#X connect 39 0 49 0;
#X connect 42 0 8 0;
#X connect 43 0 10 0;
#X connect 44 0 7 0;
#X connect 48 0 17 0;
#X connect 49 0 38 0;
#X connect 50 0 23 0;
#X restore 472 252 pd convert;
#X text 228 312 - output/convert color;
#X text 144 344 rgb <f \, f \, f>;
#X text 228 328 - open color picker;
#X text 198 328 pick;
#X text 150 360 hex <symbol>;
#X text 156 463 to <symbol>;
#X text 174 492 anything;
#X text 232 526 none;
#X obj 4 547 cnv 3 550 3 empty empty flags 8 12 0 13 -228856 -1 0;
#X obj 4 606 cnv 3 550 3 empty empty click 8 12 0 13 -228856 -1 0;
#X text 151 614 clicking on the object opens color picker;
#X obj 248 244 else/colors;
#X text 228 464 -;
#X text 162 390 ds <float>;
#X text 228 344 - RGB (Red \, Green and Blue) color values;
#X text 229 360 - hexadecimal color value;
#X text 340 188 color in hexadecimal;
#X text 369 210 color in RGB;
#X text 241 463 set conversion to "rgb" \, "hex" \, "gui" or "ds";
#X obj 248 272 else/display;
#X text 120 405 cmyk <f \, f \, f \, f>;
#X text 228 405 - CMYK (Cyan \, Magente Yellow and Key) color values
;
#X text 144 419 hsl <f \, f \, f>;
#X text 144 433 hsv <f \, f \, f>;
#X text 150 448 gray <float>;
#X text 228 419 - HSL (Hue \, Saturation and Lightness) color values
;
#X text 228 433 - HSV (Hue \, Saturation and Value) color values,
f 50;
#X text 228 448 - grayscale value from 0 to 100;
#X text 77 88 [colors] is a color picker and converter. You can set
the output format and also convert from other input formats. Colors
that you pick and colors you send to the object are stored and recalled
next time you open the color picker. This object is useful for setting
color properties inside abstractions., f 66;
#N canvas 810 160 720 512 iemgui/DS 0;
#X obj 64 286 else/pack2 rgb 0 0 0;
#X obj 103 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -258049
-262144 -1 0 0;
#X obj 142 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4033
-262144 -1 0 0;
#X obj 181 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4160
-262144 -1 0 0;
#X obj 227 144 cnv 15 90 250 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 229 146 cnv 15 86 246 empty \$0-set-cnv empty 20 12 0 14 -1
-66577 0;
#X text 228 126 GUI;
#X text 557 122 Data Structures;
#N canvas 4 23 450 300 \$0-DS 0;
#X scalar 1030-pixel 0 \;;
#X coords 0 0 1 1 90 250 2 100 100;
#X restore 560 144 pd \$0-DS;
#N canvas 488 57 292 236 set-gui 0;
#X msg 64 148 color \$1;
#X obj 64 170 send \$0-set-cnv;
#X obj 106 96 loadbang;
#X msg 106 116 -1;
#X obj 64 62 inlet;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X restore 44 382 pd set-gui;
#N canvas 359 23 276 256 set-ds 0;
#N canvas 98 230 427 275 \$0-pixel 0;
#X obj 74 152 struct \$0-pixel float color;
#X obj 74 184 filledpolygon color 0 2 0 0 0 1 1 1 1 0;
#X restore 79 188 pd \$0-pixel;
#X obj 191 39 inlet;
#X obj 68 65 else/lb;
#X msg 68 122 clear \, scalar \$1 \$2;
#X obj 68 146 send pd-\$0-DS;
#X obj 68 96 pack2 list \$0-pixel 0;
#X connect 1 0 5 2;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 391 375 pd set-ds;
#X obj 391 286 else/pack2 rgb 0 0 0;
#X obj 430 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -258049
-262144 -1 0 0;
#X obj 469 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4033
-262144 -1 0 0;
#X obj 508 148 vsl 15 128 0 255 0 0 nope nada empty 0 -9 0 10 -4160
-262144 -1 0 0;
#X obj 391 313 else/colors -ds;
#X obj 391 342 else/display;
#X obj 44 345 else/display;
#X msg 44 249 to hex;
#X text 132 27 [colors] can output color values specially for Pd Vanilla's
GUI objects (aka iemgus) and Data Structures. In recent versions of
Pd \, the iemguis also understand colors with hex notation \, which
should be the best practice way to work with colors in these objects
nowadays. But [colors] can also set to the particular and old iemgui
float format., f 72;
#X text 152 430 Data Structures also have a particular format to set
colors \, provided by colors with the '-ds' flag or "to ds" message.
Note that these have less color resolution.;
#X obj 44 313 else/colors -iemgui;
#X msg 22 221 to iemgui;
#X connect 0 0 21 0;
#X connect 1 0 0 1;
#X connect 2 0 0 2;
#X connect 3 0 0 3;
#X connect 11 0 15 0;
#X connect 12 0 11 1;
#X connect 13 0 11 2;
#X connect 14 0 11 3;
#X connect 15 0 16 0;
#X connect 16 0 10 0;
#X connect 17 0 9 0;
#X connect 18 0 21 0;
#X connect 21 0 17 0;
#X connect 22 0 21 0;
#X restore 460 272 pd iemgui/DS;
#X text 228 492 - color values (in RGB \, hex \, iemgui or ds);
#X text 138 375 iemgui <float>;
#X text 229 375 - iemgui's color format value;
#X text 229 390 - Data Structures' color value;
#X text 142 555 -rgb - sets to RGB list output (default hexadecimal)
, f 59;
#X text 124 570 -iemgui - sets to iemguis output (default hexadecimal)
, f 62;
#X text 148 585 -ds - sets to Data Structures output (default hexadecimal)
;
#X text 37 276 output (hexadecimal by default) =>;
#X connect 0 0 38 0;
#X connect 21 0 38 0;
#X connect 22 0 38 0;
#X connect 23 0 38 0;
#X connect 38 0 46 0;
