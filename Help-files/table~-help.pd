#N canvas 556 37 563 430 10;
#X obj 4 404 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 5 244 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 5 319 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 5 350 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 119 326 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 190 327 signal;
#X text 172 354 1) symbol;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 0 0;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 25 41 cnv 4 4 4 empty empty Table 0 28 2 18 -233017 -1 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#X obj 78 41 cnv 4 4 4 empty empty reader 0 28 2 18 -233017 -1 0;
#X obj 3 4 cnv 15 301 42 empty empty table~ 20 20 2 37 -233017 -1 0
;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X text 178 385 3) float;
#X text 178 370 2) float;
#X obj 120 253 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 234 354 - array name (optional \, default none), f 43;
#X obj 212 160 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#N canvas 198 207 361 306 table 0;
#X obj 27 74 cnv 15 298 198 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-table 515 float 0;
#X coords 0 1 514 -1 300 200 1 0 0;
#X restore 26 74 graph;
#X obj 92 18 else/initmess \; \$0-table sinesum 512 1 0.5 0.333 0.25
\, normalize, f 38;
#X restore 113 203 pd table;
#X text 156 267 set <symbol> - sets an entire array to be used as a
waveform, f 62;
#X text 56 192 check table =>, f 8;
#X text 83 89 [table~] reads an array with 4 point interpolation. It
accepts indexes from 0 to 1 by default.;
#X obj 215 137 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 212 186 else/table~ \$0-table;
#X text 156 252 float/signal - sets index/phase, f 62;
#X text 234 327 - table values;
#N canvas 521 112 553 394 oscillator 0;
#X obj 146 127 else/out~;
#X obj 126 195 else/graph~ 441 11;
#X obj 126 93 else/table~;
#X obj 126 34 nbx 6 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 126 63 phasor~ 100;
#X obj 32 42 else/initmess set \$0-table, f 13;
#X text 231 39 If you connect a [phasor~] into [table~] \, it becames
a wavetable oscillator like [tabosc4~] or [else/wavetable~]. Note that
besides the first argument \, the "set" message followed by an array
name sets an array to be read., f 47;
#X connect 2 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X restore 458 173 pd oscillator;
#X text 234 370 - non-0 sets to guard mode (default 1), f 43;
#X text 234 385 - non-0 sets to index mode (default 0), f 43;
#X text 150 283 guard <float> - non-0 sets to guard mode, f 62;
#X text 150 298 index <float> - non-0 sets to index mode, f 62;
#N canvas 714 218 430 358 index 0;
#X obj 158 178 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 161 155 hsl 128 15 0 514 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X text 29 36 By default \, [table~] is in normalized mode \, where
indexes are normalized from 0 to 1 \, but you can change that with
the third argument or the "index" message. When in index mode \, you
need to give [table~] the actual index number.;
#X obj 158 271 tabread4~ \$0-table;
#X msg 88 176 guard \$1;
#X obj 88 157 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 178 205 else/table~ \$0-table 0 1;
#X text 29 89 When in index mode \, if you set it to guard mode \,
it will behave exactly like [tabread4~] \, as it won't be able to read
the first or last point of the table.;
#X obj 158 300 else/display~;
#X obj 178 234 else/display~;
#X connect 0 0 3 0;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 3 0 8 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 9 0;
#X restore 488 213 pd index;
#X obj 490 72 else/setdsp~;
#N canvas 553 158 414 429 guard-points 0;
#X obj 115 198 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 118 175 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X obj 115 234 else/table~ \$0-table 0;
#X msg 49 195 guard \$1;
#X obj 49 175 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 261 234 tabosc4~ \$0-table;
#X text 28 11 By default \, [table~] is in guard point mode \, where
it considers there are 3 extra points needed for the 4 point interpolation
(one at the beggining of the table and 2 at the end). In this case
\, it will not read the guard points \, but the indexes between them.
, f 59;
#X text 28 73 You can set it no non guard point mode with the second
argument or the "guard 0" message. In this case \, when the interpolation
requires guard points out of the table - such as when reading the first
index of the table - it considers the non existing guard points to
be the same as the nearest value (thus \, equal to the first index
of the table in our example).;
#X text 27 312 In the example above \, [table~] reads a table that
was generated with the "sinesum" method sent to an array. In this case
\, the guard points needed are created. So when you are in guard point
mode \, you don't have access to them. It actually behaves exactly
like [tabosc4~] \, where a phase input can be considered an index when
its frequency is zero!;
#X obj 261 261 else/display~;
#X obj 115 264 else/display~;
#X connect 0 0 2 0;
#X connect 0 0 5 1;
#X connect 1 0 0 0;
#X connect 2 0 10 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 9 0;
#X restore 446 193 pd guard-points;
#X obj 212 212 else/display~;
#X connect 23 0 29 0;
#X connect 28 0 23 0;
#X connect 29 0 40 0;
