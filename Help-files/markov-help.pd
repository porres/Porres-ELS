#N canvas 652 66 562 600 10;
#X obj 169 182 bng 18 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X msg 220 205 clear;
#X msg 199 183 create;
#X floatatom 262 256 5 0 0 0 - - -;
#X text 259 205 clear memory;
#X obj 3 335 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 489 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 3 531 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 91 343 cnv 17 3 97 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 91 446 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 92 498 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 3 574 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 5 5 cnv 15 301 42 empty empty markov 20 20 2 37 -233017 -1 0
;
#X obj 308 6 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 4 5 graph;
#X obj 347 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 -128992 -233080
0;
#X obj 25 42 cnv 4 4 4 empty empty Create/play 0 28 2 18 -233017 -1
0;
#X obj 462 13 cnv 10 10 10 empty empty EL 0 6 2 13 -128992 -233080
0;
#X obj 482 13 cnv 10 10 10 empty empty Locus 0 6 2 13 -128992 -233080
0;
#X obj 519 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 -128992 -233080
0;
#X obj 468 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 -128992 -233080
0;
#X obj 506 28 cnv 10 10 10 empty empty library 0 6 2 13 -128992 -233080
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 307 5 graph;
#X obj 180 42 cnv 4 4 4 empty empty chains 0 28 2 18 -233017 -1 0;
#X obj 117 42 cnv 4 4 4 empty empty markov 0 28 2 18 -233017 -1 0;
#X obj 91 466 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X obj 199 303 else/display;
#X msg 230 230 60 \, 60 \, 62 \, 60 \, 65 \, 64;
#X obj 199 278 else/markov;
#X text 299 255 set order;
#X text 372 230 <= 1) feed memory;
#X text 245 181 <= 2) create markov chain and go to start;
#X text 100 182 3) Play =>;
#X text 172 341 bang;
#X text 209 341 - get value from markov chain and goes to the next
;
#X text 160 355 create;
#X text 166 369 clear;
#X text 209 369 - clear memory, f 50;
#X text 209 355 - create markov chain from memory and go to start,
f 50;
#X text 166 397 reset;
#X text 209 397 - go to the start of the chain, f 50;
#X text 160 411 random;
#X text 209 411 - go to a random position in the chain, f 50;
#X text 100 383 learn <anything>;
#X text 209 383 - feed memory with new information, f 50;
#X text 148 448 anything;
#X text 209 448 - feed memory with new information, f 50;
#X text 118 425 order <float>;
#X text 209 425 - sets order, f 50;
#X text 209 468 - sets order, f 50;
#X text 166 468 float;
#X text 147 499 anything;
#X text 210 499 - output from markov chain, f 32;
#X text 141 538 1) float - sets order (defaul 1);
#X text 141 554 2) float - non zero sets to savestate mode (default
0);
#X text 48 91 [markov] creates Markov chains of any order out of progressions
of floats \, symbols or lists (which can be used to create polyphonic
chains). You can change the order and recreate the chain. You can keep
feeding information after the chain was created and recreate with the
new information. You can clear to restart from scratch. State saving
is possible with the 2nd argument \, where the chain is saved with
the patch., f 75;
#N canvas 864 49 394 673 midi-file 0;
#X obj 49 254 stripnote;
#X msg 49 129 open;
#X text 100 153 <= read/analyze;
#X msg 203 229 clear;
#X obj 253 223 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 67 179 trigger anything bang;
#X msg 67 153 dump;
#X obj 154 318 else/markov;
#X msg 154 229 create;
#X obj 49 229 else/note.in;
#X text 84 128 <= open another;
#X obj 52 372 else/keyboard 17 80 2 4 0 0 empty empty;
#X obj 154 343 makenote 127 300, f 22;
#X obj 108 546 *~;
#X obj 52 488 mtof;
#X obj 108 601 out~;
#X obj 123 488 / 127;
#X obj 52 514 else/tri~;
#X obj 123 514 else/adsr~ 50 10 0.7 100;
#X obj 108 574 else/plate.rev~ 50 0.6 0.25 0.8 0.5;
#X obj 52 463 unpack f f;
#X obj 49 205 else/midi bday.mid;
#X text 274 223 <= play;
#X floatatom 244 295 3 1 5 0 - - -;
#X text 269 295 order;
#X msg 49 278 learn \$1;
#X obj 253 250 else/tempo 120 50;
#X text 32 14 This example creates a monophonic chain from MIDI input.
Here you can also try to increase the order. An order of "2" means
that the next note depends on the preceding two values. This makes
it a lot less random \, so the more you increase the order \, the more
it looks like the original input. After changing the order you need
to recreate the chain. For this happy brthday example \, an order of
5 outputs the original tune., f 54;
#X obj 244 184 else/initmess 1;
#X connect 0 0 25 0;
#X connect 1 0 21 0;
#X connect 3 0 7 0;
#X connect 4 0 26 0;
#X connect 5 0 21 0;
#X connect 5 1 3 0;
#X connect 6 0 5 0;
#X connect 7 0 12 0;
#X connect 8 0 7 0;
#X connect 9 0 0 0;
#X connect 9 1 0 1;
#X connect 11 0 20 0;
#X connect 12 0 11 0;
#X connect 12 1 11 1;
#X connect 13 0 19 0;
#X connect 14 0 17 0;
#X connect 16 0 18 0;
#X connect 17 0 13 0;
#X connect 18 0 13 1;
#X connect 19 0 15 0;
#X connect 20 0 14 0;
#X connect 20 1 16 0;
#X connect 21 0 9 0;
#X connect 21 1 8 0;
#X connect 23 0 7 2;
#X connect 25 0 7 0;
#X connect 26 0 7 0;
#X connect 28 0 23 0;
#X restore 462 304 pd midi-file;
#N canvas 807 97 429 499 midi-in 0;
#X obj 173 103 stripnote;
#X msg 153 73 clear;
#X obj 26 25 tgl 18 0 empty empty empty 17 7 0 10 -228856 -1 -1 0 1
;
#X obj 142 177 else/markov;
#X msg 143 49 create;
#X obj 40 231 else/keyboard 17 80 2 4 0 0 empty empty;
#X obj 142 202 makenote 127 300, f 22;
#X text 47 25 <= play;
#X floatatom 205 155 5 0 0 0 - - -;
#X text 241 153 order;
#X obj 209 76 notein;
#X obj 173 130 else/combine 50;
#X text 272 130 <= create lists;
#X text 290 142 for chords;
#X obj 40 334 else/voices 4 1 -list;
#X obj 40 363 clone 4 voice 4;
#X obj 40 400 else/out~;
#X text 164 374 In this example you can use a MIDI keyboard to feed
the [markov] object. With the [combine] object you can generate lists
for chords., f 37;
#X text 255 75 <= MIDI input;
#X obj 26 49 else/tempo 120 50;
#X connect 0 0 11 0;
#X connect 1 0 3 0;
#X connect 2 0 19 0;
#X connect 3 0 6 0;
#X connect 4 0 3 0;
#X connect 5 0 14 0;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 8 0 3 2;
#X connect 10 0 0 0;
#X connect 10 1 0 1;
#X connect 11 0 3 1;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 15 1 16 1;
#X connect 19 0 3 0;
#X restore 473 283 pd midi-in;
#X connect 0 0 28 0;
#X connect 1 0 28 0;
#X connect 2 0 28 0;
#X connect 3 0 28 2;
#X connect 27 0 28 1;
#X connect 28 0 26 0;
